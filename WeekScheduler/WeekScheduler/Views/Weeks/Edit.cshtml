@model WeekScheduler.ViewModels.EditWeekViewModel

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<h4>Week</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" name="ProjectID" asp-for="ProjectID" />
            <input type="hidden" name="WeekID" asp-for="WeekID" />
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.ProjectID)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.ProjectID)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.WeekID)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.WeekID)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.FirstDayOfTheWeek)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.FirstDayOfTheWeek)
                </dd>
            </dl>
            <div class="form-group">
                <label asp-for="Notes1Monday" class="control-label"></label>
                <input asp-for="Notes1Monday" class="form-control" />
                <span asp-validation-for="Notes1Monday" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Notes2Tuesday" class="control-label"></label>
                <input asp-for="Notes2Tuesday" class="form-control" />
                <span asp-validation-for="Notes2Tuesday" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Notes3Wednesday" class="control-label"></label>
                <input asp-for="Notes3Wednesday" class="form-control" />
                <span asp-validation-for="Notes3Wednesday" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Notes4Thursday" class="control-label"></label>
                <input asp-for="Notes4Thursday" class="form-control" />
                <span asp-validation-for="Notes4Thursday" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Notes5Friday" class="control-label"></label>
                <input asp-for="Notes5Friday" class="form-control" />
                <span asp-validation-for="Notes5Friday" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Notes6Saturday" class="control-label"></label>
                <input asp-for="Notes6Saturday" class="form-control" />
                <span asp-validation-for="Notes6Saturday" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Notes7Sunday" class="control-label"></label>
                <input asp-for="Notes7Sunday" class="form-control" />
                <span asp-validation-for="Notes7Sunday" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
        <form action="" method="post">
            <input type="submit" value="Assign employees to slots" formaction="CalculateWeek" />
            <input type="hidden" name="ProjectID" value="@Model.ProjectID" />
            <input type="hidden" name="WeekID" value="@Model.WeekID" />
        </form>

        <table class="table">
            <tr>
                <th>
                    Initials
                </th>
                <th>
                    Name
                </th>
                <th>
                    On project @Html.DisplayFor(model => model.ProjectID)
                </th>
                <th></th>
            </tr>
            @foreach (var item in Model.Employees)
            {
                bool isAssigned = Model.EmployeeProjects.Where(e => e.EmployeeID == item.EmployeeID).Any();
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmployeeID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @if (isAssigned)
                        {
                            @Html.ActionLink("Remove", "Remove", "EmployeeProjects", new { ProjectID = Model.ProjectID, WeekID = Model.WeekID, EmployeeID = item.EmployeeID })
                        }
                        else
                        {
                            @Html.ActionLink("Add", "Add", "EmployeeProjects", new { ProjectID = Model.ProjectID, WeekID = Model.WeekID, EmployeeID = item.EmployeeID })
                        }
                    </td>
                </tr>
            }
        </table>

        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.ActivitiesWithSlots.FirstOrDefault().Activity.ActivityID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ActivitiesWithSlots.FirstOrDefault().Activity.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ActivitiesWithSlots.FirstOrDefault().Activity.DayOfWeek)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ActivitiesWithSlots.FirstOrDefault().Activity.TimeOfDay)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ActivitiesWithSlots.FirstOrDefault().Activity.Hours)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ActivitiesWithSlots.FirstOrDefault().Activity.Importance)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ActivitiesWithSlots.FirstOrDefault().Activity.Owner)
                    </th>
                    <th>
                        Created
                    </th>
                    <th>
                        Add
                    </th>
                    <th>
                        Remove
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ActivitiesWithSlots)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Activity.ActivityID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Activity.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Activity.DayOfWeek)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Activity.TimeOfDay)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Activity.Hours)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Activity.Importance)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Activity.Owner)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Slots.Count)
                        </td>
                        <td>
                            @if (Model.EmployeeProjects.Count > item.Slots.Count && (item.Activity.Owner == "" || item.Activity.Owner == null || item.Slots.Count < 1))
                            {
                                @Html.ActionLink("Add", "Add", "Slots", new { ProjectID = Model.ProjectID, WeekID = Model.WeekID, ActivityID = item.Activity.ActivityID })
                            }
                        </td>
                        <td>
                            @if (item.Slots.Count > 0)
                            {
                                @Html.ActionLink("Remove", "Remove", "Slots", new { ProjectID = Model.ProjectID, WeekID = Model.WeekID, ActivityID = item.Activity.ActivityID })
                            }
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-ActivityID="@item.Activity.ActivityID">Edit</a> |
                            <a asp-action="Details" asp-route-ActivityID="@item.Activity.ActivityID">Details</a> |
                            <a asp-action="Delete" asp-route-ActivityID="@item.Activity.ActivityID">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div>
    <a href='javascript:history.go(-1)'>Return</a>
</div>
<div>
    <a asp-action="Index">Back to list of weeks</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}